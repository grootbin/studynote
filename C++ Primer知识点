一、面向对象编程
1、类的成员函数默认为非虚函数，对非虚函数的调用在编译时确定。在成员函数返回类型前加上virtual关键字可将其定义为虚函数（启用动态绑定），对虚函数的调用是程序运行时确定的。除了构造函数之外，任意非static成员函数都可以是虚函数。
2、派生类只能通过派生类对象访问其基类的protected成员，派生类对其基类对象的protected成员没有特殊访问权限。
3、派生类中虚函数的声明必须与基类中的定义方式完全匹配，但有一个例外：返回对基类的引用（或指针）的虚函数。派生类中的虚函数可以返回基类函数所返回类型的派生类的引用（或指针）。
4、动态绑定的两个条件：第一，指定为虚函数的成员函数；第二，通过基类的引用或指针进行函数调用。
5、对于非虚函数，即使派生类定义了自己的版本，派生类对象对这个函数的调用也会调用基类中的版本。
6、使用public继承，基类中的public成员protected成员保持自己的访问级别；使用protected继承，基类中的public成员和protected成员都变成protected级别；实用private继承，基类中的所有成员变成private成员。
7、struct与class的唯一区别在于，struct的默认成员保护级别和默认派生保护级别为public，class则为private。
